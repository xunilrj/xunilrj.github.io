{"id":"node_modules/level-codec/index.js","dependencies":[{"name":"C:\\github\\xunilrj.github.io\\package.json","includedInParent":true,"mtime":1552076176392},{"name":"C:\\github\\xunilrj.github.io\\node_modules\\level-codec\\package.json","includedInParent":true,"mtime":1552076106751},{"name":"./lib/encodings","loc":{"line":1,"column":24},"parent":"C:\\github\\xunilrj.github.io\\node_modules\\level-codec\\index.js","resolved":"C:\\github\\xunilrj.github.io\\node_modules\\level-codec\\lib\\encodings.js"}],"generated":{"js":"var encodings = require('./lib/encodings');\n\nmodule.exports = Codec;\n\nfunction Codec(opts){\n  this.opts = opts || {};\n  this.encodings = encodings;\n}\n\nCodec.prototype._encoding = function(encoding){\n  if (typeof encoding == 'string') encoding = encodings[encoding];\n  if (!encoding) encoding = encodings.id;\n  return encoding;\n};\n\nCodec.prototype._keyEncoding = function(opts, batchOpts){\n  return this._encoding(batchOpts && batchOpts.keyEncoding\n    || opts && opts.keyEncoding\n    || this.opts.keyEncoding);\n};\n\nCodec.prototype._valueEncoding = function(opts, batchOpts){\n  return this._encoding(\n    batchOpts && (batchOpts.valueEncoding || batchOpts.encoding)\n    || opts && (opts.valueEncoding || opts.encoding)\n    || (this.opts.valueEncoding || this.opts.encoding));\n};\n\nCodec.prototype.encodeKey = function(key, opts, batchOpts){\n  return this._keyEncoding(opts, batchOpts).encode(key);\n};\n\nCodec.prototype.encodeValue = function(value, opts, batchOpts){\n  return this._valueEncoding(opts, batchOpts).encode(value);\n};\n\nCodec.prototype.decodeKey = function(key, opts){\n  return this._keyEncoding(opts).decode(key);\n};\n\nCodec.prototype.decodeValue = function(value, opts){\n  return this._valueEncoding(opts).decode(value);\n};\n\nCodec.prototype.encodeBatch = function(ops, opts){\n  var self = this;\n\n  return ops.map(function(_op){\n    var op = {\n      type: _op.type,\n      key: self.encodeKey(_op.key, opts, _op)\n    };\n    if (self.keyAsBuffer(opts, _op)) op.keyEncoding = 'binary';\n    if (_op.prefix) op.prefix = _op.prefix;\n    if ('value' in _op) {\n      op.value = self.encodeValue(_op.value, opts, _op);\n      if (self.valueAsBuffer(opts, _op)) op.valueEncoding = 'binary';\n    }\n    return op;\n  });\n};\n\nvar ltgtKeys = ['lt', 'gt', 'lte', 'gte', 'start', 'end'];\n\nCodec.prototype.encodeLtgt = function(ltgt){\n  var self = this;\n  var ret = {};\n  Object.keys(ltgt).forEach(function(key){\n    ret[key] = ltgtKeys.indexOf(key) > -1\n      ? self.encodeKey(ltgt[key], ltgt)\n      : ltgt[key]\n  });\n  return ret;\n};\n\nCodec.prototype.createStreamDecoder = function(opts){\n  var self = this;\n\n  if (opts.keys && opts.values) {\n    return function(key, value){\n      return {\n        key: self.decodeKey(key, opts),\n        value: self.decodeValue(value, opts)\n      };\n    };\n  } else if (opts.keys) {\n    return function(key) {\n      return self.decodeKey(key, opts);\n    }; \n  } else if (opts.values) {\n    return function(_, value){\n      return self.decodeValue(value, opts);\n    }\n  } else {\n    return function(){};\n  }\n};\n\nCodec.prototype.keyAsBuffer = function(opts){\n  return this._keyEncoding(opts).buffer;\n};\n\nCodec.prototype.valueAsBuffer = function(opts){\n  return this._valueEncoding(opts).buffer;\n};\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/level-codec/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/level-codec/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}}],"sources":{"node_modules/level-codec/index.js":"var encodings = require('./lib/encodings');\n\nmodule.exports = Codec;\n\nfunction Codec(opts){\n  this.opts = opts || {};\n  this.encodings = encodings;\n}\n\nCodec.prototype._encoding = function(encoding){\n  if (typeof encoding == 'string') encoding = encodings[encoding];\n  if (!encoding) encoding = encodings.id;\n  return encoding;\n};\n\nCodec.prototype._keyEncoding = function(opts, batchOpts){\n  return this._encoding(batchOpts && batchOpts.keyEncoding\n    || opts && opts.keyEncoding\n    || this.opts.keyEncoding);\n};\n\nCodec.prototype._valueEncoding = function(opts, batchOpts){\n  return this._encoding(\n    batchOpts && (batchOpts.valueEncoding || batchOpts.encoding)\n    || opts && (opts.valueEncoding || opts.encoding)\n    || (this.opts.valueEncoding || this.opts.encoding));\n};\n\nCodec.prototype.encodeKey = function(key, opts, batchOpts){\n  return this._keyEncoding(opts, batchOpts).encode(key);\n};\n\nCodec.prototype.encodeValue = function(value, opts, batchOpts){\n  return this._valueEncoding(opts, batchOpts).encode(value);\n};\n\nCodec.prototype.decodeKey = function(key, opts){\n  return this._keyEncoding(opts).decode(key);\n};\n\nCodec.prototype.decodeValue = function(value, opts){\n  return this._valueEncoding(opts).decode(value);\n};\n\nCodec.prototype.encodeBatch = function(ops, opts){\n  var self = this;\n\n  return ops.map(function(_op){\n    var op = {\n      type: _op.type,\n      key: self.encodeKey(_op.key, opts, _op)\n    };\n    if (self.keyAsBuffer(opts, _op)) op.keyEncoding = 'binary';\n    if (_op.prefix) op.prefix = _op.prefix;\n    if ('value' in _op) {\n      op.value = self.encodeValue(_op.value, opts, _op);\n      if (self.valueAsBuffer(opts, _op)) op.valueEncoding = 'binary';\n    }\n    return op;\n  });\n};\n\nvar ltgtKeys = ['lt', 'gt', 'lte', 'gte', 'start', 'end'];\n\nCodec.prototype.encodeLtgt = function(ltgt){\n  var self = this;\n  var ret = {};\n  Object.keys(ltgt).forEach(function(key){\n    ret[key] = ltgtKeys.indexOf(key) > -1\n      ? self.encodeKey(ltgt[key], ltgt)\n      : ltgt[key]\n  });\n  return ret;\n};\n\nCodec.prototype.createStreamDecoder = function(opts){\n  var self = this;\n\n  if (opts.keys && opts.values) {\n    return function(key, value){\n      return {\n        key: self.decodeKey(key, opts),\n        value: self.decodeValue(value, opts)\n      };\n    };\n  } else if (opts.keys) {\n    return function(key) {\n      return self.decodeKey(key, opts);\n    }; \n  } else if (opts.values) {\n    return function(_, value){\n      return self.decodeValue(value, opts);\n    }\n  } else {\n    return function(){};\n  }\n};\n\nCodec.prototype.keyAsBuffer = function(opts){\n  return this._keyEncoding(opts).buffer;\n};\n\nCodec.prototype.valueAsBuffer = function(opts){\n  return this._valueEncoding(opts).buffer;\n};\n\n"},"lineCount":107}},"error":null,"hash":"19d713e20e77854f071c79a3b4cec565","cacheData":{"env":{}}}